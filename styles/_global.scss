@import "./_variables.scss";
@import "./_select.scss";

* {
  box-sizing: border-box;
}
html {
  transition: background 0.3s ease, color 1s ease;
  @include variable(color, --textColor, orange);
}

// FONTS & TEXT
h1 {
  text-align: center;
  span {
    font-weight: 300;
    opacity: 0.8;
    display: block;
    font-size: 1.2rem;
  }
}
a {
  color: #fff;
}

// FORMS
fieldset {
  // align-items: center;
  // justify-content: center;
  border: none;
  padding: 0;
}
input[type="text"] {
  background: var(--textColor);
  color: var(--themeColor);
  border: none;
  box-shadow: none;
  padding: 0.25rem 0rem 0.25rem 0.5rem;
  font-weight: bold;
  outline: none;
  // border-radius: .25rem;
  min-height: 1.5rem;
  color: var(--backgroundColor);
}
button {
  transform: translateY(0);
  transition: transform 0.3s ease, background 0.3s ease, border-color 0.3s ease;
  outline: none;
  font-weight: bold;
  border-radius: 2rem;
  padding: 0.5rem 1rem;
  text-transform: uppercase;
  &.active {
    @include variable(background, --textColor, orange);
    @include variable(color, --backgroundColor, orange);
    cursor: pointer;
    svg path {
      @include variable(fill, --backgroundColor, orange);
    }
  }
}

button {
  @media (hover: hover) {
    &:hover {
      @include variable(background, --textColor, orange);
      @include variable(color, --backgroundColor, orange);
      cursor: pointer;
      svg path {
        @include variable(fill, --backgroundColor, orange);
      }
    }
  }
}

// MISC
.authLink {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100vh;
  a {
    background: var(--themeColor-weakest);
    color: var(--themeColor-strongest);
    padding: 1rem 2rem;
    border-radius: 2rem;
    text-decoration: none;
    font-weight: 600;
    @media (hover: hover) {
      &:hover {
        @include variable(background, --textColor, orange);
        @include variable(color, --backgroundColor, orange);
      }
    }
  }
}
